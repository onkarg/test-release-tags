name: Release creator

on:
  workflow_dispatch:
    inputs:
      branch:
        type: string
        description: Branch,tag, or SHA to deploy?
        default: release
        required: false
    # secrets:
    #   FLEET_RELEASE_SLACK_WEBHOOK:
    #     required: true
  # schedule:
  #   # runs tests every Friday at 2pm UTC
  #   - cron: '0 14 * * 5'

jobs:
  release_creator:
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.release_tag.outputs.release_tag }}
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%-d.%-m.%Y')"

      - name: Generate release tag environment variable
        id: release_tag
        run: echo "::set-output name=release_tag::webapps-fleet@${{ steps.date.outputs.date }}"

      - name: Dump GitHub context
        id: github_context_step
        run: echo '${{ steps.release_tag.outputs.release_tag }}'

  tag_generator:
    runs-on: ubuntu-latest
    needs: release_creator
    steps:
      # Check out code using git
      - uses: actions/checkout@v2
      # Install Node 12
      - uses: actions/setup-node@v1
        with:
          version: 12
      - run: npm install @octokit/action
      # Node.js script can be anywhere. A good convention is to put local GitHub Actions
      # into the `.github/actions` folder
      - run: node .github/actions/create-release.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # notify_slack:
  #   runs-on: ubuntu-latest
  #   if: always()
  #   needs: release_creator
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #     - uses: technote-space/workflow-conclusion-action@v2
  #     - name: Report status
  #       if: always()
  #       run: node ./.github/scripts/slack-release-notification.js
  #       env:
  #         FLEET_RELEASE_SLACK_WEBHOOK: ${{ secrets.FLEET_RELEASE_SLACK_WEBHOOK }}
  #         RELEASE_TAG: ${{ needs.release_creator.outputs.release_tag }}